name: Production Deployment

on:
  push:
    branches: [main]
  workflow_dispatch:
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 前端构建
      - name: Build frontend
        working-directory: client
        env:
          CI: false  # 关键修改：禁用CI严格模式
        run: |
          npm install
          npm run build

      # 使用SCP传输文件
      - name: Copy frontend files to server
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_SSH_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "client/build/*"
          target: "/var/www/html/"
          strip_components: 2

      - name: Copy backend files to server
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_SSH_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "server/*"
          target: "/root/server/"
          strip_components: 1

      # 服务器部署操作
      - name: Deploy to server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_SSH_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # 安装后端依赖并重启服务
            echo "Restarting backend..."
            cd /root/server
            npm install --production
            pkill -f "node server.js" || true
            nohup node server.js > server.log 2>&1 &
            
            # 验证服务
            echo "Verifying services..."
            ls -la /var/www/html
            pgrep -f "node server.js"
